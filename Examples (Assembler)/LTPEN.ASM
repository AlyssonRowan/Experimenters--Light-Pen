FRAME	STRUC
SAVBP	DW	?
SAVRET	DD	?
ROW	DD	?
COLM	DD	?
STAT	DD	?
FRAME	ENDS
;---------------------------------
;  LTPEN:
;     THIS ROUTINE WILL INTERFACE FORTRAN OR PASCAL
;     TO THE LIGHT PEN PROCEDURE SUPPLIED IN THE BIOS.
;
;   NORMAL FORTRAN INVOCTION:
;     CALL LTPEN(STATUS, COLUMN, ROW)	NOTE: ALL VARIABLES ARE INTEGERS
;
;   NORMAL PASCAL INVOCTION:
;      PROCEDURE LTPEN (STATUS, COLUMN, ROW); EXTERN;
;   .
;   .
;   .
;      LTPEN (STATUS, COLUMN, ROW);	NOTE: ALL VARIABLES ARE INTEGERS
;  
;---------------
;
;   ON EXIT FROM THIS ROUTINE:
;     STATUS - WILL BE SET TO 0 IF NO DATA IS AVAILABLE(COLUMN AND ROW
	       UNCHANGED), OTHERWISE IT WILL BE SET TO 1.
;     COLUMN - WILL CONTAIN THE COLUMN VALUE OF THE PENS
;	       CURRENT POSITION.(RANGE 0 TO 79)
;      ROW   - WILL CONTAIN THE ROW VALUE OF THE PENS CURRENT
;	       POSITION.(RANGE 0 TO 24)
;
;--------------------------------
CDSEG	SEGMENT
DGROUP	GROUP	DATA
	ASSUME	CS:CDSEG, DS:DGROUP, SS:DGROUP, ES:DGROUP
LTPEN	PROC	FAR
	PUBLIC	LTPEN
	PUSH	BP
	MOV	BP,SP
;
	MOV	AH,4		;  SET AH=4 FOR LIGHT PEN SELECT
	INT	10H		;   CALL BIOS VIDEO_IO
;
;   AT THIS POINT AH CONTAINS STATUS OF PEN(0 IF NO DATA, 1 OTHERWISE)
	MOV	AL,AH		;  MOV VALUE TO LOW BYTE
	XOR	AH,AH		;  CLEAR HIGH BYTE
	LES	BX,[BP] + STAT	;  GET ADDR OF FIRST PARAM
	MOV	ES:[BX],AX	;  PUT STATUS IN FIRST PARAM
	TEST	AL,1		;  DOES STATUS=0?
	JZ	DONE		;  YES, RETURN
;
	XOR	AX,AX		;  CLEAR ACCUM FOR OUTPUT USE
	MOV	AL,DL		;  GET COLUMN VALUE INTO AL
	LES	BX,[BP] + COLM	;  GET ADDR OF SECOND PARAM
	MOV	ES:[BX],AX	;  PUT COLUMN VALUE IN
	MOV	AL,DH		;  GET ROW VALUE INTO AL
	LES	BX,[BP] + ROW	;  GET ADDR OF THIRD PARAM
	MOV	ES:[BX],AX	;  PUT ROW VALUE IN
DONE:
	POP	BP
	RET	12
LTPEN	ENDP
CDSEG	ENDS
	END
	