10 ' FTG Data Systems PICTURE
20 ' Version 1.00 (C)Copyright FTG Data Systems 1982
30 ' Licensed Material - Program Property of FTG Date Systems
40 ' Dave E. Boulanger - programs author
50 '
60 ' SWITCH TO COLOR ADAPTER
70 DEF SEG=0 : POKE &H410, (PEEK(&H410) AND &HCF) OR &H10
80 SCREEN 1,0,0,0 : SCREEN 0 : WIDTH 40 : LOCATE ,,1,6,7
90 '
100 ' CHECK IF CALLED BY MENU
110 DEF SEG=0 : READ A$ : FOR I%=0 TO 10 : IF PEEK(&H4F0+I%)<>ASC(MID$(A$,I%+1,1))     THEN 160 ELSE NEXT I%
120 DRIVE$=CHR$(PEEK(&H4FD)) + ":" : GOTO 170
130 '
140 DATA "FTG IS HERE"
150 '
160 DRIVE$="A:"
170 '
180 DEFINT Z : KEY 6,CHR$(7) : KEY 7,CHR$(7)
190 SCREEN 2 : KEY OFF : CLS : DIM P%(4),TXT%(300),XH(3),YH(3),LOADAREA%(130)
200 PSET(0,0),1 : GET(0,0)-(0,0),P%
210 '
220 COMPILE%=0'  SET THIS FLAG TO 1 WHEN COMPILING, 0 FOR INTERPRETIVE
230 '
240 DEF SEG : ZREVRS=VARPTR(LOADAREA%(0)) : BLOAD DRIVE$+"RVSCRG",ZREVRS
250 ZFLL=VARPTR(LOADAREA%(65)) : BLOAD DRIVE$+"FLSCRG",ZFLL
260 '
270 GOSUB 2760
280 '
290 X = 320 : Y = 100 : PI = 3.1415 : TWOPI = PI * 2 : COLR%=0 : COLR$="B"
300 TWOPI = 6.2831853# : PI = TWOPI/2 : NINTY = PI / 2 : UNDO%=1
310 ON KEY(11) GOSUB 730 : ON KEY(12) GOSUB 740 : ON KEY(13) GOSUB 750
320 ON KEY(14) GOSUB 760 : FOR I%=11 TO 14 : KEY(I%) ON : NEXT I%
330 ON KEY(1) GOSUB 2810 : ON KEY(2) GOSUB 2670 : ON KEY(3) GOSUB 2890
340 ON KEY(4) GOSUB 2920 : ON KEY(5) GOSUB 3030 : ON KEY(6) GOSUB 2850
350 ON KEY(7) GOSUB 3950 : FOR I%=1 TO 5 : KEY(I%) ON : NEXT I%
360 DEF FNDIST(X1,Y1,X2,Y2)  = SQR(((X1-X2)^2) + (((Y1-Y2)*2.4)^2))
370 DEF FNANGLE(X1,Y1,X2,Y2) = ATN(((Y1-Y2)*2.4) / (X1-X2))
380 DEF FNANGL2(X1,Y1,X2,Y2) = ATN(((Y1-Y2)*5.5) / (X1-X2))
390 DEF FNCNVRT(YC,Y1) = (YC - Y1) + YC : ON ERROR GOTO 3070
400 '
410 '  THIS IS THE MAIN MENU PARSING SECTION
420 '
430 LOCATE 1,2 : PRINT STRING$(79,32);
440 LOCATE 1,1 : PRINT COLR$;
450 LOCATE 1,18,0 : PRINT "Please chose ONE command (type HP for help):";
460 '
470 '  CONVERT RESPONCE INTO UPPER CASE LETTERS
480 A$ = ""
490 FOR K%=1 TO 2
500   B$ = INKEY$ : IF B$="" THEN 500 ELSE LOCATE 1,62+K% : PRINT B$;
510   A$ = A$ + B$  : I% = ASC(B$)
520   IF (I%<65) OR (I%>122) THEN 430
530  IF I%>96 THEN I% = I% - 32 : MID$(A$,K%,1) = CHR$(I%)
540 NEXT K%
550 '
560 IF A$="HP" THEN GOSUB 790 : GOTO 430
570 IF A$="BX" THEN KEY(7) ON : GOSUB 1160 : KEY(7) OFF : GOTO 430
580 IF A$="CC" THEN KEY(7) ON : GOSUB 1270 : KEY(7) OFF : GOTO 430
590 IF A$="CT" THEN KEY(7) ON : GOSUB 1410 : KEY(7) OFF : GOTO 430
600 IF A$="AT" THEN KEY(7) ON : GOSUB 1590 : KEY(7) OFF : GOTO 430
610 IF A$="AC" THEN KEY(7) ON : GOSUB 1890 : KEY(7) OFF : GOTO 430
620 IF A$="PD" THEN KEY(7) ON : GOSUB 2050 : KEY(7) OFF : GOTO 430
630 IF A$="CD" THEN : GOSUB 2230 : GOTO 430
640 IF A$="FL" THEN KEY(7) ON : GOSUB 2350 : KEY(7) OFF : GOTO 430
650 IF A$="SV" THEN GOSUB 2390 : GOTO 430
660 IF A$="LD" THEN GOSUB 2470 : GOTO 430
670 IF A$="TX" THEN KEY(7) ON : GOSUB 2580 : KEY(7) OFF : GOTO 430
680 IF A$="ER" THEN GOSUB 2700 : GOTO 430
690 IF A$="RV" THEN GOSUB 2670 : GOTO 430
700 IF A$="EX" THEN ON ERROR GOTO 0 : RUN "A:MENU" ELSE GOTO 430
710 '
720 ' THE FOUR CURSOR CONTROL KEYS WILL SINGLE STEP THE DOT
730 YSTP% = -1 : RETURN'    UP SCREEN
740 XSTP% = -1 : RETURN'    LEFT SCREEN
750 XSTP% =  1 : RETURN'    RIGHT SCREEN
760 YSTP% =  1 : RETURN'    DOWN SCREEN
770 '
780 '   HELP SUBROUTINE MODULE
790 '
800 LOCATE 1,1 : PRINT STRING$(80,32); : LOCATE 1,1
810 LOCATE 1,56 : PRINT "SPACE to cont, ESC to end";
820 LOCATE 1,1 : PRINT "BX - draw box, FL - fill area with current color    "
830 A$=INKEY$ : IF A$="" THEN 830 ELSE IF ASC(A$)=27 THEN RETURN
840 LOCATE 1,1 : PRINT "CT - circle thru 3 points, CC - circle center/radius"
850 A$=INKEY$ : IF A$="" THEN 850 ELSE IF ASC(A$)=27 THEN RETURN
860 IF ASC(A$)=8 THEN 820
870 LOCATE 1,1 : PRINT "AT - arc thru 3 poimts, AC - arc center/radius      "
880 A$=INKEY$ : IF A$="" THEN 880 ELSE IF ASC(A$)=27 THEN RETURN
890 IF ASC(A$)=8 THEN 840
900 LOCATE 1,1 : PRINT "TX - display text, ER - erase screen                "
910 A$=INKEY$ : IF A$="" THEN 910 ELSE IF ASC(A$)=27 THEN RETURN
920 IF ASC(A$)=8 THEN 870
930 LOCATE 1,1 : PRINT "PD - point to point draw, CD - continuous draw      "
940 A$=INKEY$ : IF A$="" THEN 940 ELSE IF ASC(A$)=27 THEN RETURN
950 IF ASC(A$)=8 THEN 900
960 LOCATE 1,1 : PRINT "SV - save screen on disk, LD - load screen from disk"
970 A$=INKEY$ : IF A$="" THEN 970 ELSE IF ASC(A$)=27 THEN RETURN
980 IF ASC(A$)=8 THEN 930
990 LOCATE 1,1 : PRINT "RV - reverse screen image, EX - exit to MENU program"
1000 A$=INKEY$ : IF A$="" THEN 1000 ELSE IF ASC(A$)=27 THEN RETURN
1010 IF ASC(A$)=8 THEN 960
1020 LOCATE 1,1 : PRINT "F1 KEY - change drawing color, F2 KEY - reverse screen"
1030 A$=INKEY$ : IF A$="" THEN 1030 ELSE IF ASC(A$)=27 THEN RETURN
1040 IF ASC(A$)=8 THEN 990
1050 LOCATE 1,1 : PRINT "F3 KEY - restart PD function, F4 KEY - erase last draw"
1060 A$=INKEY$ : IF A$="" THEN 1060 ELSE IF ASC(A$)=27 THEN RETURN
1070 IF ASC(A$)=8 THEN 1020
1080 LOCATE 1,1 : PRINT "F5 KEY - fill top row, F6 KEY - input radius for CC   "
1090 A$=INKEY$ : IF A$="" THEN 1090 ELSE IF ASC(A$)=27 THEN RETURN
1100 IF ASC(A$)=8 THEN 1050
1110 LOCATE 1,1 : PRINT "F7 KEY - type in X,Y location                         "
1120 A$=INKEY$ : IF A$="" THEN 1120 ELSE IF ASC(A$)=27 THEN RETURN
1130 IF ASC(A$)=8 THEN 1080 ELSE RETURN
1140 '
1150 '    BOX SUBROUTINE MODULE
1160 '
1170 UNDO%=2 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
1180 PRINT "LOCATE ONE CORNER, THEN HIT SPACE BAR (HIT ESC TO EXIT)";
1190   GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 1170
1200 PUT(X,Y),P% : X2 = X : Y2 = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1210 LOCATE 1,5,0 : PRINT "LOCATE OPPOSITE CORNER AND THEN HIT SPACE BAR";
1220   GOSUB 3830 : IF A$="E" THEN PUT(X2,Y2),P% : RETURN
1230   IF A$="7ON" THEN 1210
1240 LINE(X2,Y2)-(X,Y),COLR%,B : XL1=X2 : YL1=Y2 : XL2=X : YL2=Y : GOTO 1170
1250 '
1260 '    CIRCLE SUBROUTINE MODULE
1270 '
1280 UNDO%=3 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
1290 PRINT "LOCATE CENTER POINT OF CIRCLE, THEN HIT SPACE BAR";
1300   GOSUB 3830 :IF A$="E" THEN KEY(6) OFF :RETURN ELSE IF A$="7ON" THEN 1280
1310 PUT(X,Y),P% : X1 = X : Y1 = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1320 LOCATE 1,5,0
1330 PRINT "LOCATE POINT ON EDGE OF CIRCLE, THEN HIT SPACE BAR";
1340 KEY(6) ON : GOSUB 3830 : IF A$="E" THEN KEY(6) OFF : PUT(X1,Y1),P% : RETURN
1350 IF A$="7ON" THEN 1320 ELSE IF RAD = 0 THEN RAD = FNDIST(X1,Y1,X,Y)
1360 PUT(X1,Y1),P% : CIRCLE (X1,Y1),RAD,COLR% :XL1=X1 :YL1=Y1 :RADL=RAD
1370 X = X1 : Y = Y1 : GOTO 1280
1380 '
1390 '    CIRCLE IN 3 POINTS SUBROUTINE MODULE
1400 '
1410 UNDO%=3 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
1420 PRINT"LOCATE FIRST POINT OF CIRCLE, THEN HIT SPACE BAR";
1430  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 1410
1440 PUT(X,Y),P% : XH(1) = X : YH(1) = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1450 LOCATE 1,5,0 : PRINT"LOCATE SECOND POINT OF CIRCLE AND THEN HIT SPACE BAR"
1460  GOSUB 3830 : IF A$="E" THEN PUT(XH(1),YH(1)),P% : RETURN
1470  IF A$="7ON" THEN 1450
1480 PUT(X,Y),P% : XH(2) = X : YH(2) = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1490 LOCATE 1,5,0 : PRINT"LOCATE THIRD POINT OF CIRCLE AND THEN HIT SPACE BAR";
1500  GOSUB 3830 :IF A$="E" THEN PUT(XH(1),YH(1)),P% :PUT(XH(2),YH(2)),P% :RETURN
1510  IF A$="7ON" THEN 1490
1520 XH(3) = X :YH(3) = Y :FOR I%=1 TO 2 :PUT(XH(I%),YH(I%)),P% :NEXT I% :GOSUB 3300
1530 RAD = FNDIST(XC,YC,X,Y) : CIRCLE(XC,YC),RAD,COLR%
1540 XL1 = XC :YL1 = YC :RADL = RAD :IF (XC>=0) AND (XC<=639) THEN X = INT(XC)
1550 IF (YC>=0) AND (YC<=199) THEN Y = INT(YC) : GOTO 1410 ELSE GOTO 1410
1560 '
1570 '    ARC IN 3 POINTS SUBROUTINE MODULE
1580 '
1590 UNDO%=4 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
1600 PRINT"LOCATE START POINT OF ARC, THEN HIT SPACE BAR";
1610  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 1590
1620 PUT(X,Y),P% : XH(1) = X : YH(1) = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1630 LOCATE 1,5,0 : PRINT"LOCATE MIDDLE POINT OF ARC AND THEN HIT SPACE BAR"
1640  GOSUB 3830 : IF A$="E" THEN PUT(XH(1),YH(1)),P% : RETURN
1650  IF A$="7ON" THEN 1630
1660 PUT(X,Y),P% : XH(2) = X : YH(2) = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1670 LOCATE 1,5,0 : PRINT"LOCATE END POINT OF ARC AND THEN HIT SPACE BAR";
1680  GOSUB 3830 :IF A$="E" THEN PUT(XH(1),YH(1)),P% :PUT(XH(2),YH(2)),P% :RETURN
1690  IF A$="7ON" THEN 1670
1700 XH(3) = X : YH(3) = Y : PUT(X,Y),P% : X1 = XH(1) : Y1 = YH(1)
1710 X2 = XH(2) : Y2 = YH(2) : FOR I%=1 TO 3 : PUT(XH(I%),YH(I%)),P% : NEXT I%
1720 GOSUB 3300 : GOSUB 3210
1730 '
1740 '  DETERMINE ARC DIRECTION
1750 Y1 = FNCNVRT(YC,Y1) : Y2 = FNCNVRT(YC,Y2) : Y3 = FNCNVRT(YC,Y)
1760  GOSUB 3750 : ANG1 = ANGL : X1=X2 : Y1=Y2 : GOSUB 3750 : ANG2 = ANGL
1770  X1 = X : Y1 = Y3 : GOSUB 3750 : ANG3 = ANGL
1780 IF ANG1<0 THEN ANG1 = ANG1 + TWOPI
1790 IF ANG2<0 THEN ANG2 = ANG2 + TWOPI
1800 IF ANG3<0 THEN ANG3 = ANG3 + TWOPI
1810 IF ANG2<ANG1 THEN ANG2 = ANG2 + TWOPI
1820 IF ANG3<ANG1 THEN ANG3 = ANG3 + TWOPI
1830 IF ANG3-ANG1 < ANG2-ANG1 THEN SWAP ANGSTR,ANGEND
1840 RAD = FNDIST(XC,YC,X,Y) : CIRCLE(XC,YC),RAD,COLR%,ANGSTR,ANGEND
1850 XL1 = XC : YL1 = YC : RADL = RAD : GOTO 1590
1860 '
1870 '    ARC WITH CENTER SUBROUTINE MODULE
1880 '
1890 UNDO% = 4 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
1900 PRINT "LOCATE CENTER POINT OF ARC, THEN HIT SPACE BAR";
1910  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 1890
1920 PUT(X,Y),P% : XC = X : YC = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1930 LOCATE 1,5,0 : PRINT "LOCATE BEGINING POINT OF ARC AND THEN HIT SPACE BAR"
1940  GOSUB 3830 : IF A$="E" THEN PUT(XC,YC),P% : RETURN
1950  IF A$="7ON" THEN 1930
1960 PUT(X,Y),P% : X1 = X : Y1 = Y : LOCATE 1,2 : PRINT STRING$(79,32);
1970 LOCATE 1,5,0 : PRINT "LOCATE ENDING POINT OF ARC AND THEN HIT SPACE BAR";
1980  GOSUB 3830 : IF A$="E" THEN PUT(XC,YC),P% : PUT(X1,Y1),P% : RETURN
1990  IF A$="7ON" THEN 1970
2000 PUT(XC,YC),P% : PUT(X1,Y1),P% : GOSUB 3210
2010 RAD = FNDIST(XC,YC,X1,Y1) : CIRCLE (XC,YC),RAD,COLR%,ANGSTR,ANGEND
2020 X = XC : Y = YC : XL1 = XC : YL1 = YC : RADL = RAD : GOTO 1890
2030 '
2040 '    POINT TO POINT DRAW SUBROUTINE MODULE
2050 '
2060 UNDO% = 5 : LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2070 PRINT "LOCATE FIRST POINT, THEN HIT SPACE BAR (HIT ESC TO EXIT)";
2080  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 2060
2090 PSET(X,Y),P% : X2=X : Y2=Y : DRAWON=1 : FRST% = 0 : ONER%=3
2100 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2110 PRINT "LOCATE END POINT AND THEN HIT SPACE BAR (HIT F3 FOR NO DRAW)"; : KEY7HIT% = 0
2120 IF DRAWON=0 THEN 2060 ELSE IF KEY7HIT%=1 THEN 2110
2130   LOCATE 1,66 : PRINT "X=";X;" Y=";Y;
2140    PEN ON : X=X+XSTP% : Y=Y+YSTP% :YSTP%=0 :XSTP%=0 : ER%=0
2150    PUT(X,Y),P%  
2160    IF ER%=1 THEN 2100 ELSE FOR I=1 TO 50 : NEXT I : PUT(X,Y),P%
2170    IF PEN(3)=0 THEN 2180 ELSE X = PEN(4) :Y = PEN(5)
2180    PEN OFF : A$=INKEY$ : IF A$="" THEN 2120 ELSE IF A$=" " THEN 2200
2190    IF ASC(A$)<>27 THEN 2120 ELSE IF FRST% = 1 THEN RETURN ELSE PUT(X2,Y2),P% : RETURN
2200 FRST% = 1 : LINE (X2,Y2)-(X,Y),COLR% :XL1=X2 :YL1=Y2 :XL2=X :YL2=Y :X2=X :Y2=Y :GOTO 2120
2210 '
2220 '    CONTINUOUS DRAW SUBROUTINE MODULE
2230 '
2240 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2250 PRINT "KEEP PEN PRESSED AGAINST THE SCREEN TO DRAW (HIT ESC TO EXIT)";
2260    A$=INKEY$ : IF A$="" THEN 2270 ELSE IF ASC(A$)=27 THEN RETURN
2270    FRSTIME% = 0
2280    IF (INP(&H3DA) AND 4) = 4 THEN 2260 ELSE PEN ON : IF PEN(3)=0 THEN PEN OFF : GOTO 2280 ELSE X = PEN(4) : Y = PEN(5) : PEN OFF
2290   LOCATE 1,66 : PRINT "X=";X;" Y=";Y;
2300    IF FRSTIME%<2 THEN FRSTIME%=FRSTIME%+1 :X1 = X :Y1 = Y :GOTO 2280
2310    LINE (X1,Y1)-(X,Y),COLR% : X1 = X : Y1 = Y : GOTO 2280
2320 '
2330 '     FILL SUBROUTINE MODULE
2340 '
2350 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2360 PRINT "LOCATE POINT INSIDE OF AREA TO FILL, THEN HIT SPACE BAR";
2370  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 2350
2380 PAINT (X,Y),COLR% : GOTO 2350
2390 '
2400 '    SAVE SCREEN SUBROUTINE MODLUE
2410 '
2420 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2430 PRINT " NAME OF FILE TO SAVE (HIT CR WHEN DONE):";
2440 GOSUB 4060 : IF (ASC(A$)=27) OR (B$="") THEN RETURN
2450 GOSUB 3030 : DEF SEG=&HB800 : BSAVE DRIVE$+B$,0,&H4000 : ONER%=4 : ER%=0
2460 IF ER%=1 THEN 2420 ELSE RETURN
2470 '
2480 '   LOAD SCREEN SUBROUTINE MODULE
2490 '
2500 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2510 PRINT " NAME OF FILE TO LOAD (HIT CR WHEN DONE):";
2520 GOSUB 4060 : IF (ASC(A$)=27) OR (B$="") THEN RETURN
2530 DEF SEG=&HB800 : BLOAD DRIVE$+B$,0 : ONER%=5 : ER%=0
2540 IF ER%=1 THEN 2500 ELSE RETURN
2550 '
2560 '    DISPLAY TEXT SUBROUTINE MODULE
2570 '
2580 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2590 PRINT "LOCATE TOP LEFT CORNER, THEN HIT SPACE BAR (HIT ESC TO EXIT)";
2600  GOSUB 3830 : IF A$="E" THEN RETURN ELSE IF A$="7ON" THEN 2580
2610 KEY(7) OFF : PUT(X,Y),P% : LOCATE 1,2 : PRINT STRING$(79,32);
2620 LOCATE 1,5,0 : PRINT "ENTER TEXT:";
2630 GOSUB 4060 : IF (ASC(A$)=27) OR (B$="") THEN RETURN
2640 PUT(X,Y),P% :GET(120,0)-((LEN(B$)*10)+120,7),TXT% : PUT(X,Y),TXT% : GOTO 2580
2650 '
2660 '   FUNCTION KEY 2 - REVERSE SCREEN
2670 GOSUB 2810 : DEF SEG : ZREVRS=VARPTR(LOADAREA%(0)) : IF COMPILE%=1 THEN 2690
2680 CALL ZREVRS : RETURN
2690 CALL ABSOLUTE(ZREVRS) : RETURN
2700 '
2710 '    ERASE SCREEN SUBROUTINE MODULE
2720 '
2730 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5
2740 PRINT "OK TO ERASE? (HIT ESC FOR NO, ANY KEY FOR YES)";
2750 A$=INKEY$ : IF A$="" THEN 2750 ELSE IF ASC(A$)=27 THEN RETURN
2760 DEF SEG : ZFLL = VARPTR(LOADAREA%(65)) : IF COMPILE%=1 THEN 2780
2770 CALL ZFLL : RETURN
2780 CALL ABSOLUTE(ZFLL) : RETURN
2790 '
2800 '    FUNCTION KEY 1 - TOGGLE CURRENT DRAWING COLOR
2810 IF COLR$="B" THEN COLR$="W" :COLR%=1 :GOTO 2820 ELSE COLR$="B" : COLR%=0
2820 LOCATE 1,1 : PRINT COLR$; : RETURN
2830 '
2840 '    FUNCTION KEY 6 - TYPE IN RADIUS FOR CIRCLE
2850 LOCATE 1,2 : PRINT STRING$(79,32); : LOCATE 1,5,0
2860 PRINT "TYPE IN RADIUS (HIT CR WHEN DONE):";
2870 GOSUB 4060 : IF (ASC(A$)=27) OR (B$="") THEN RETURN
2880 RAD = VAL(B$) : RETURN
2890 '
2900 '    FUNCTION KEY 3 - TOGGLE LINE ON/OFF FOR PD
2910 IF DRAWON = 0 THEN DRAWON = 1 : RETURN ELSE DRAWON = 0 : RETURN
2920 '
2930 ' FUNCTION KEY 4 - ERASE LAST COMMAND
2940 IF COLR%=0 THEN COLR2%=1 ELSE COLR2%=0
2950 ON UNDO% GOTO 2960,2970,2980,2990,3000
2960 RETURN
2970 LINE(XL1,YL1)-(XL2,YL2),COLR2%,B : RETURN
2980 CIRCLE(XL1,YL1),RADL,COLR2% : RETURN
2990 CIRCLE(XL1,YL1),RADL,COLR2%,ANGSTR,ANGEND : RETURN
3000 LINE (XL2,YL2)-(XL1,YL1),COLR2% :X=XL1 : Y=YL1 :X2 = XL1 :Y2 = YL1 :RETURN
3010 '
3020 ' FUNCTION KEY 5 - BLANK OUT TOP LINE
3030 LOCATE 1,1 : FOR I%=0 TO 7 : LINE(0,I%)-(639,I%),COLR% : NEXT I% : RETURN
3040 '
3050 '    ERROR HANDLING SECTION
3060 '
3070 LOCATE 1,1 : PRINT STRING$(80,32);
3080 LOCATE 1,1,0 : PRINT "THE PREVIOUS COMMAND CANNOT BE COMPLETED AS ENTERED.  HIT ANY KEY AND TRY AGAIN";
3090 IF (X<0) OR (X>639) THEN X = 320
3100 IF (Y<0) OR (Y>199) THEN Y = 100
3110 A$=INKEY$ : IF A$="" THEN 3110 ELSE ER%=1 : LOCATE 1,1 : PRINT STRING$(80,32); : ON ONER% GOTO 3120,3130,3140,3150,3160
3120 RESUME 3910
3130 RESUME 430
3140 RESUME 2160
3150 RESUME 2460
3160 RESUME 2540
3170 '
3180 '  THIS SUBROUTINE MODULE WILL DETERMINE THE CORRECT
3190 '  BEGINING AND ENDING ANGLES FOR DRAWING ARCS.
3200 '
3210 XS = X1 : YS = Y1 : Y3=FNCNVRT(YC,Y1) : Y1=Y3 : GOSUB 3790 : ANGSTR=ANGL
3220 X1 = X : Y4=FNCNVRT(YC,Y) : Y1 = Y4 : GOSUB 3790 : ANGEND = ANGL
3230 IF ANGSTR<0 THEN ANGSTR = ANGSTR + TWOPI
3240 IF ANGEND<0 THEN ANGEND = ANGEND + TWOPI
3250 X1 = XS : Y1 = YS : RETURN
3260 '
3270 '  THIS SUBROUTINE MODULE WILL FIND THE CENTER POINT
3280 '  FOR THE COMMANDS "CT" AND "AT"
3290 '
3300 '
3310 XH2 = XH(1) : YH2 = YH(1)
3320 FOR I% = 1 TO 3 : XH(I%)=XH(I%)-XH2 : YH(I%)=YH(I%)-YH2 : NEXT I%
3330 '
3340 IF XH(1)<>XH(2) THEN 3350 ELSE ANG1 = 0 : GOTO 3360
3350 ANG1 = FNANGL2(XH(1),YH(1),XH(2),YH(2)) + NINTY
3360 IF XH(2)<>XH(3) THEN 3370 ELSE ANG2 = 0 : GOTO 3380
3370 ANG2 = FNANGL2(XH(2),YH(2),XH(3),YH(3)) + NINTY
3380 FOR I%=1 TO 2
3390   XH(I%) = (XH(I%) + XH(I%+1)) * .5
3400   YH(I%) = (YH(I%) + YH(I%+1)) * .5
3410 NEXT I%
3420 '
3430 ANGSIN = SIN(ANG1) : ANGCOS = COS(ANG1)
3440 IF ABS(ANGSIN) >= ABS(ANGCOS) THEN 3490
3450   FACM1 = ANGSIN / ANGCOS
3460   FACK1 = YH(1) - XH(1) * ANGSIN / ANGCOS
3470   TYPE1 = 1 : GOTO 3530
3480 '
3490   FACM1 = ANGCOS / ANGSIN
3500   FACK1 = XH(1) - YH(1) * ANGCOS / ANGSIN
3510   TYPE1 = 2
3520 '
3530 '
3540 ANGSIN = SIN(ANG2) : ANGCOS = COS(ANG2)
3550 IF ABS(ANGSIN) >= ABS(ANGCOS) THEN 3600
3560   FACM2 = ANGSIN / ANGCOS
3570   FACK2 = YH(2) - XH(2) * ANGSIN / ANGCOS
3580   TYPE2 = 1 : GOTO 3640
3590 '
3600   FACM2 = ANGCOS / ANGSIN
3610   FACK2 = XH(2) - YH(2) * ANGCOS / ANGSIN
3620   TYPE2 = 2
3630 '
3640 '
3650 IF TYPE1 <> TYPE2 THEN 3700
3660 IF ABS(FACM1-FACM2) > .001 THEN 3710
3670 '
3680 '   PARALLEL LINES.  INDUCE AN ERROR
3690 ONER%=2 :  READ I% 
3700 XC = ((FACK1 * FACM2) + FACK2) / (1 - (FACM1 * FACM2)) : GOTO 3720
3710 XC = (FACK2 - FACK1) / (FACM1 - FACM2)
3720 YC = FACM1 * XC + FACK1 : IF TYPE1 = 2 THEN SWAP XC,YC
3730 XC = XC + XH2 : YC = YC + YH2
3740 RETURN
3750 '
3760 '  THIS SUBROUTINE MODULE WILL RETURN ANGLES IN THE RANGE
3770 '  OF +-2PI
3780 '
3790 IF XC=X1 THEN 3810 ELSE ANGL = FNANGLE(XC,YC,X1,Y1)
3800 IF X1>XC THEN RETURN ELSE ANGL = ANGL + PI : RETURN
3810 IF YC=Y1 THEN ANGL=0 : RETURN ELSE IF Y1<YC THEN ANGL = -PI/2 ELSE ANGL=PI/2
3820 RETURN
3830 '
3840 ' THIS SUBROUTINE MODULE WILL HANDLE LIGHT PEN INPUT
3850 '
3860 RAD = 0 : KEY7HIT%=0 : XS = X : YS = Y : ONER%=1
3870 IF RAD <>0 THEN RETURN ELSE IF KEY7HIT%=1 THEN A$="7ON" : RETURN
3880   LOCATE 1,66 : PRINT "X=";X;" Y=";Y;
3890   X=X+XSTP% : Y=Y+YSTP% :YSTP%=0 :XSTP%=0 : ER%=0
3900   PUT(XS,YS),P% 
3910   IF ER%=1 THEN A$="7ON" : RETURN ELSE FOR I=1 TO 50 : NEXT I : PUT(XS,YS),P% : XS = X : YS = Y
3920   PEN ON : IF PEN(3)=0 THEN 3930 ELSE X = PEN(4) : Y = PEN(5)
3930   PEN OFF : A$ = INKEY$ : IF A$="" THEN 3870 ELSE IF A$=" " THEN RETURN
3940   IF ASC(A$)<>27 THEN 3870 ELSE A$="E" : RETURN
3950 '
3960 '  FUNTION KEY 7 - TYPE IN COORDINATES FROM KEYBOARD
3970 KEY(7) OFF : LOCATE 1,2 : PRINT STRING$(79,32) : LOCATE 1,5
3980 PRINT "TYPE IN X AND Y LOCATION (X,Y cr):"; : B$=""
3990 GOSUB 4060 : IF (ASC(A$)=27) OR (B$="") THEN KEY(7) ON : RETURN
4000 X = VAL(B$) : J = INSTR(1,B$,",") : Y = VAL(RIGHT$(B$,LEN(B$)-J))
4010 IF (X<0) OR (X>639) OR (Y<0) OR (Y>199) THEN 3970 ELSE KEY7HIT%=1
4020 LOCATE 1,2 : PRINT STRING$(79,32) : KEY(7) ON : RETURN
4030 '
4040 ' KEYBOARD INPUT SUBROUTINE MODULE
4050 '
4060 B$=""
4070 A$=INKEY$ : IF A$="" THEN 4070 ELSE IF ASC(A$)=13 THEN RETURN
4080 IF ASC(A$)=27 THEN RETURN
4090 IF ASC(A$)=8 THEN B$ = LEFT$(B$,LEN(B$)-1) :PRINT CHR$(29);" ";CHR$(29); :GOTO 4070 ELSE IF A$=CHR$(7) THEN 4070 ELSE PRINT A$; : B$ = B$ + A$ : GOTO 4070
