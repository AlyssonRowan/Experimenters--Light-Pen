10 ' FTG Data Systems MENU
20 ' Version 2.00 (C)Copyright FTG Data Systems 1982
30 ' Licensed Material - Program Property of FTG Date Systems
40 ' Dave E. Boulanger - programs author
50 '
60 ' SWITCH TO COLOR ADAPTER
70 DEF SEG=0 : POKE &H410, (PEEK(&H410) AND &HCF) OR &H10
80 SCREEN 1,0,0,0 : SCREEN 0 : WIDTH 40 : LOCATE ,,1,6,7
90 CLS : KEY OFF
100 DEFINT A-Z
110 '
120 '  THIS PROGRAM WILL PASS CERTAIN DRIVE SPECIFICATIONS TO
130 '  VARIOUS PROGRAMS VIA MEMORY LOCATIONS &H4F0-&H4FF.
140 '
150 '  ON THE FIRST TIME THRU, IT WILL INSERT A 10 LETTER
160 '  ID CODE AND THEN READ THE FILE "MENU.DAT".  THIS FILE
170 '  CONTAINS THE DRIVE ASSIGNMENTS NEEDED BY LIFE AND TEST
180 '  AS WELL AS CALBRATE AND MENU.
190 '  IT WILL THEN PLACE THIS INFO INTO MEMORY.  AND ON EACH
200 '  NEW PASS IT WILL ACCESS MEMORY DIRECTLY.  THIS INFO
210 '  IS LOST EVEY TIME THE SYSTEM IS BOOTED.
220 '
230 '   CHECK FOR FIRST TIME THRU
240 DEF SEG=0 : READ A$ : FOR I=0 TO 10
250   IF PEEK(&H4F0+I)<>ASC(MID$(A$,I+1,1)) THEN 310
260 NEXT I
270 DRIVE1$=CHR$(PEEK(&H4FC)) : DRIVE2$=CHR$(PEEK(&H4FD))
280 IF DRIVE1$=" " THEN DRIVE1$="" ELSE DRIVE1$=DRIVE1$ + ":"
290 IF DRIVE2$=" " THEN DRIVE2$="" ELSE DRIVE2$=DRIVE2$ + ":"
300 GOTO 470
310 '
320 '  THIS IS THE FIRST TIME SO MARK OUR PRESENCE
330 RESTORE : READ A$ : FOR I=0 TO 10 : POKE &H4F0+I,ASC(MID$(A$,I+1,1)) : NEXT
340 ON ERROR GOTO 830
350 '
360 '  THIS IS THE ROUTINE THAT WAS USED TO CREAT THE .FTG FILE
370 '
380 '  OPEN "MENU.FTG" FOR OUTPUT AS #1
390 '  WRITE #1,"A:","B:"
400 '  CLOSE
410 '
420  OPEN "MENU.FTG" FOR INPUT AS #1
430   INPUT #1,DRIVE1$,DRIVE2$ : CLOSE
440 POKE &H4FC,ASC(LEFT$(DRIVE1$,1)) : POKE &H4FD,ASC(LEFT$(DRIVE2$,1))
450 '
460 DATA "FTG IS HERE","FTG HAS LEFT"
470 '
480 LOCATE 1,16 : PRINT"M E N U"
490 LOCATE 3,19 : PRINT "by" : LOCATE 4,12 : PRINT "FTG Data Systems"
500 '
510 LOCATE 6,8 : PRINT"A:" : LOCATE 6,30 : PRINT "B:"
520 LOCATE 8,2 : PRINT CHR$(219);CHR$(219);" - CALIBRATE"
530 LOCATE 10,2 : PRINT CHR$(219);CHR$(219);" - TTTOE"
540 LOCATE 12,2 : PRINT CHR$(219);CHR$(219);" - SNAKE"
550 LOCATE 14,2 : PRINT CHR$(219);CHR$(219);" - GOBBLE"
560 LOCATE 18,2 : PRINT CHR$(219);CHR$(219);" - EXIT"
570 LOCATE 8,21 : PRINT CHR$(219);CHR$(219);" - LIFE(80 COLUMN)"
580 LOCATE 10,21 : PRINT CHR$(219);CHR$(219);" - LIFE(40 COLUMN)"
590 LOCATE 12,21 : PRINT CHR$(219);CHR$(219);" - TEST(GRAPHICS)"
600 LOCATE 14,21 : PRINT CHR$(219);CHR$(219);" - TEST(ALPHA)"
610 LOCATE 16,21 : PRINT CHR$(219);CHR$(219);" - PICTURE"
620 LOCATE 18,21 : PRINT CHR$(219);CHR$(219);" - TUTOR"
630 LOCATE 22,1,0 : PRINT "Touch PEN to the square of your choice."
640 '
650 DEF SEG=0 : POKE 1050,PEEK(1052)
660 PEN ON : IF PEN(3)=0 THEN 660 ELSE X=PEN(9) : Y=PEN(8) : PEN OFF
670 IF (Y<8) OR (Y>18) THEN 660 ELSE Y = Y/2 - 3
680 IF X>=20 THEN Y = Y + 6
690 ON Y GOTO 710,720,730,740,660,830,760,770,780,790,800,810
700 '
710 A$="CALBRATE" : RUN DRIVE1$ + A$
720 A$="TTTOE" : RUN DRIVE1$ + A$
730 A$="SNAKE" : RUN DRIVE1$ + A$
740 A$="GOBBLE" : RUN DRIVE1$ + A$
750 '
760 A$="LIFE" : POKE &H4FE,80 : RUN DRIVE2$ + A$
770 A$="LIFE" : POKE &H4FE,40 : RUN DRIVE2$ + A$
780 A$="TEST" : POKE &H4FE,40 : RUN DRIVE2$ + A$
790 A$="TEST" : POKE &H4FE,80 : RUN DRIVE2$ + A$
800 A$="PICTURE" : RUN DRIVE2$ + A$
810 A$="TUTOR" : RUN DRIVE2$ + A$
820 '
830 WIDTH 80 : SYSTEM
