10 ' FTG Data Systems SNAKE
20 ' Version 3.00 (C)Copyright FTG Data Systems 1982
30 ' Licensed Material - Program Property of FTG Date Systems
40 ' Dave E. Boulanger - programs author
50 '
60 ' SWITCH TO COLOR ADAPTER
70 DEF SEG=0 : POKE &H410, (PEEK(&H410) AND &HCF) OR &H10
80 SCREEN 1,0,0,0 : SCREEN 0 : WIDTH 40 : LOCATE ,,1,6,7
90 DEFINT A-Z
100 '
110 COMPILE=0' SET THIS FLAG TO 1 WHEN COMPILING AND 0 FOR INTERPRETIVE
120 '
130 MENU$="A:MENU"
140 DIM GRID(80,25), T$(8)
150 SCREEN 0,1,0,0
160 KEY OFF
170 CLS : WIDTH 40 : LOCATE 1,15 : PRINT "S N A K E" : PRINT
180 PRINT "        Copyright(C) 1982 by"
190 PRINT "         F.T.G. DATA SYSTEMS"
200 PRINT : PRINT : PRINT
210 PRINT "  THE COMPUTER CHALLENGES YOU TO A"
220 PRINT "  GAME OF SKILL AND SPEED.  THE"
230 PRINT "  OBJECT IS TO DIRECT YOUR SNAKE"
240 PRINT "  TO COMPLETELY SURROUND AND TRAP"
250 PRINT "  THE COMPUTERS SNAKE."
260 PRINT
270 PRINT "  BOTH SNAKES WILL LEAVE BEHIND A"
280 PRINT "  TRAIL THAT NEITHER YOU NOR THE"
290 PRINT "  COMPUTER MAY HIT.  THE SIDES MUST"
300 PRINT "  ALSO BE AVOIDED."
310 PRINT
320 PRINT "  USE THE FOUR GROUPS OF ARROWS AT"
330 PRINT "  THE BOTTOM OF THE SCREEN TO CONTROL"
340 PRINT "  YOUR DIRECTION (OR USE THE FOUR"
350 PRINT "  CURSOR CONTROL KEYS)."
360 LOCATE 25,1,0:PRINT"TOUCH THE PEN HERE ";CHR$(219);CHR$(219);" TO CONTINUE";
370 PEN ON : IF PEN(3)=0 THEN 370 ELSE IF PEN(8)<>25 THEN 370
380 SOUND 1000,1
390 CLS : LOCATE 8,1
400 PRINT "  USE THE AREA ON THE LEFT SIDE OF THE"
410 PRINT "  SCREEN TO CHOOSE BOARD SIZE, AND THE"
420 PRINT "  AREA ON THE RIGHT TO SELECT SPEED"
430 PRINT
440 PRINT "  YOUR SNAKE WILL BEGIN ON THE LEFT"
450 PRINT "  SIDE OF THE BOARD, THE COMPUTERS ON"
460 PRINT "  THE RIGHT."
470 PRINT
480 PRINT "  A COUNT DOWN IS PROVIDED BEFORE PLAY"
490 PRINT "  BEGINS TO SELECT SPEED AND SIZE.  TO"
500 PRINT "  EXIT THE PROGRAM, TOUCH THE FLASHING"
510 PRINT "  'EXIT' AT THIS TIME."
520 LOCATE 25,1,0:PRINT"TOUCH THE PEN HERE ";CHR$(219);CHR$(219);" TO BEGIN";
530 PEN ON : IF PEN(3)=0 THEN 530 ELSE IF PEN(8)<>25 THEN 530
540 SOUND 1000,1
550 IF COMPILE=1 THEN 570
560   SPD1=0 : SPD2=0 : SPD3=0 : GOTO 580
570   SPD1=3000 : SPD2=1000 : SPD3=300
580 WDTH=80
590 SPD=SPD2
600 ON KEY(11) GOSUB 2120 : ON KEY(12) GOSUB 2150 : ON KEY(13) GOSUB 2170
610 ON KEY(14) GOSUB 2200
620 CLS
630 FOR I=11 TO 14 : KEY(I) OFF : NEXT I
640 '
650 '     CLEAR OUT THE GRID ARRAY FOR NEW GAME
660 '
670 FOR I=1 TO 80 : FOR J=1 TO 25
680   GRID(I,J)=0
690 NEXT J : NEXT I
700 '
710 TURNS=1
720 T$=TIME$
730 MID$(T$,3)=" " : MID$(T$,6)=" "
740 IF VAL(T$)<32000 THEN 750 ELSE MID$(T$,1)=" " : MID$(T$,2)=" "
750 RANDOMIZE VAL(T$)
760 CLS
770 WIDTH WDTH
780 SPEED=SPD
790 '
800 '    SETUP BASES FOR START OF GAME
810 '
820 XBASE=9 : YBASE=13 : XBASE2=WDTH-9 : YBASE2=13
830 XSTEP=1 : YSTEP=0 : INDX=26 : XSTEP2=-1 : YSTEP2=0
840 GRID(XBASE,YBASE)=1 : GRID(XBASE2,YBASE2)=1
850 '
860 '
870 '   DRAW AREA BOARDER
880 '
890 COLOR 7,0
900 LOCATE 2,1 : PRINT CHR$(201); : GRID(1,2)=-1
910 FOR I=2 TO WDTH-1 : GRID(I,2)=-1 : LOCATE 2,I : PRINT CHR$(209); : NEXT I
920 LOCATE 2,WDTH : PRINT CHR$(187); : GRID(WDTH,2)=-1
930 FOR I=3 TO 22 : GRID(WDTH,I)=-1 : LOCATE I,WDTH : PRINT CHR$(182); : NEXT I
940 LOCATE 22,WDTH : PRINT CHR$(188); : GRID(WDTH,21)=-1
950 FOR I=WDTH-1 TO WDTH-8 STEP -1 : LOCATE 22,I : PRINT CHR$(207); : GRID(I,22)=-1 : NEXT I
960 LOCATE 22,WDTH-9 : PRINT CHR$(201); : GRID(WDTH-9,22)=-1
970 FOR I=23 TO 24 : LOCATE I,WDTH-9 : PRINT CHR$(182); : GRID(WDTH-9,I)=-1 : NEXT I
980 LOCATE 25,WDTH-9 : PRINT CHR$(188); : GRID(WDTH-9,25)=-1
990 FOR I=WDTH-10 TO WDTH/2+6 STEP -1 : GRID(I,25)=-1 : LOCATE 25,I : PRINT CHR$(207); : NEXT I
1000 LOCATE 25,WDTH/2+5 : PRINT CHR$(200); : GRID(WDTH/2+5,25)=-1
1010 FOR I=24 TO 23 STEP -1 : LOCATE I,WDTH/2+5 : PRINT CHR$(199); : GRID(WDTH/2+5,I)=-1 : NEXT I
1020 LOCATE 22,WDTH/2+5 : PRINT CHR$(187); : GRID(WDTH/2+5,22)=-1
1030 FOR I=WDTH/2+4 TO WDTH/2-4 STEP -1 : LOCATE 22,I : PRINT CHR$(207); : GRID(I,22)=-1 : NEXT I
1040 LOCATE 22,WDTH/2-5 : PRINT CHR$(201); : GRID(WDTH/2-5,22)=-1
1050 FOR I=23 TO 24 : LOCATE I,WDTH/2-5 : PRINT CHR$(182); : GRID(WDTH/2-5,I)=-1 : NEXT I
1060 LOCATE 25,WDTH/2-5 : PRINT CHR$(188); : GRID(WDTH/2-5,25)=-1
1070 FOR I=WDTH/2-6 TO 10 STEP -1 : LOCATE 25,I : PRINT CHR$(207); : GRID(I,25)=-1 : NEXT I
1080 LOCATE 25,9 : PRINT CHR$(200); : GRID(9,25)=-1
1090 FOR I=24 TO 23 STEP -1 : LOCATE I,9 : PRINT CHR$(199); : GRID(9,I)=-1 : NEXT I
1100 LOCATE 22,9 : PRINT CHR$(187); : GRID(9,22)=-1
1110 FOR I=8 TO 2 STEP -1 : LOCATE 22,I : PRINT CHR$(207); : GRID(I,22)=-1 : NEXT I
1120 LOCATE 22,1 : PRINT CHR$(200); : GRID(1,25)=-1
1130 FOR I=21 TO 3 STEP -1 : GRID(1,I)=-1 : LOCATE I,1 : PRINT CHR$(199); : NEXT
1140 '
1150 ' DISPLAY SCORES
1160 LOCATE 1,1 : PRINT "PLAYER ";PSCORE; : LOCATE 1,WDTH-14 : PRINT "COMPUTER";CSCORE;
1170 '
1180 '    DISPLY THE DIRECTION PADS
1190 '
1200 COLOR 0,7
1210 LOCATE 23,WDTH/2-1 : PRINT STRING$(3,24)
1220 LOCATE 24,WDTH/2+2 : PRINT " ";CHR$(16);CHR$(16);
1230 LOCATE 24,WDTH/2-4 : PRINT CHR$(17);CHR$(17);" ";
1240 LOCATE 25,WDTH/2-1 : PRINT CHR$(25);CHR$(25);CHR$(25);
1250 COLOR 7,0
1260 '
1270 GOSUB 2300
1280 '
1290 '     DISPLAY THE WIDTH PADS
1300 LOCATE 23,3 : PRINT"WIDTH"
1310 IF WDTH=40 THEN COLOR 23,0 ELSE COLOR 7,0
1320 LOCATE 24,2 : PRINT "40";
1330 IF WDTH=80 THEN COLOR 23,0 ELSE COLOR 7,0
1340 LOCATE 24,6 : PRINT "80";
1350 COLOR 7,0
1360 LOCATE 25,3 : PRINT CHR$(219);
1370 LOCATE 25,6 : PRINT CHR$(219);
1380 '
1390 '             ...AND BEGINING POSITIONS
1400 COLOR 23,4
1410 LOCATE YBASE,XBASE : PRINT CHR$(26);
1420 COLOR 0,7
1430 LOCATE YBASE2,XBASE2 : PRINT " ";
1440 '
1450 '    ALLOW TIME TO CHOSE WIDTH AND SPEED
1460 '
1470 COLOR 7,0
1480 LOCATE 10,WDTH/2-10,0 : PRINT"CHOSE WIDTH/SPEED NOW";
1490 LOCATE 15,WDTH/2-1,0 : COLOR 23 : PRINT"EXIT"; : COLOR 7
1500 FOR I=5 TO 1 STEP -1
1510   LOCATE 13,WDTH/2,0 : PRINT I;
1520   IF COMPILE=0 THEN STALL=200 ELSE STALL=1000
1530   FOR J=1 TO STALL
1540     PEN ON : IF PEN(3)=0 THEN PEN OFF : GOTO 1590 ELSE X=PEN(9) : Y=PEN(8)
1550     PEN OFF : IF (Y<>25) AND (Y<>15) THEN 1590
1560     IF (Y=15) AND (X>WDTH/2-2) AND (X<WDTH/2+5) THEN CLS : GOTO 2430
1570     IF X=WDTH-7 THEN SPD=SPD1 : GOSUB 2300 ELSE IF X=WDTH-4 THEN SPD=SPD2 : GOSUB 2300 ELSE IF X<>WDTH-1 THEN 1580 ELSE SPD=SPD3 : GOSUB 2300
1580     IF X=3 THEN WDTH=40 : GOTO 760 ELSE IF X=6 THEN WDTH=80 : GOTO 760 ELSE 1590
1590    NEXT J
1600 NEXT I
1610 LOCATE 10,WDTH/2-10,0 : PRINT"                     ";
1620 LOCATE 15,WDTH/2-1,0 : PRINT"    ";
1630 '
1640 '   COUNT DOWN FOR START OF GAME
1650 '
1660 IF COMPILE=0 THEN STALL=250 ELSE STALL=15000
1670 LOCATE 13,WDTH/2,0 : PRINT"READY";
1680 FOR I=1 TO STALL : NEXT I
1690 LOCATE 13,WDTH/2,0 : PRINT" SET ";
1700 FOR I=1 TO STALL : NEXT I
1710 LOCATE 13,WDTH/2,0 : PRINT" GO! ";
1720 FOR I=1 TO STALL : NEXT I
1730 COLOR 0,0
1740 LOCATE 13,WDTH/2,0 : PRINT"     ";
1750 TURNS = 1 : SND = 100 : SOUND SND,200
1760 '
1770 '
1780 '     ADJUST BASE VALUES FOR THE OPPONENT
1790 '
1800 FOR I=11 TO 14 : KEY(I) STOP : NEXT I
1810 XBASE=XBASE + XSTEP : YBASE=YBASE + YSTEP
1820 IF GRID(XBASE,YBASE)=0 THEN 1830 ELSE 2230
1830 GRID(XBASE,YBASE)=1
1840 '
1850 '    NOW ADJUST COMPUTERS BASE VALUES
1860 '
1870 XBASE2=XBASE2 + XSTEP2 : YBASE2=YBASE2 + YSTEP2
1880 IF GRID(XBASE2,YBASE2)=0 THEN 1960
1890 XBASE2=XBASE2 - XSTEP2 : YBASE2=YBASE2 - YSTEP2
1900 ON TURNS GOTO 1910, 1920, 1930, 1940, 1950, 2240
1910 XSTEP2=XSTEP : YSTEP2=YSTEP : TURNS=2 : GOTO 1870
1920 STP=RND(3)*2-1 : IF STP=0 THEN 1920 ELSE XSTEP2=STP : YSTEP2=0 : TURNS=3 : GOTO 1870
1930 XSTEP2=-STP : TURNS=4 : GOTO 1870
1940 STP=RND(3)*2-1 : IF STP=0 THEN 1940 ELSE XSTEP2=0 : YSTEP2=STP : TURNS=5 : GOTO 1870
1950 YSTEP2=-STP : TURNS=6 : GOTO 1870
1960 GRID(XBASE2,YBASE2)=1
1970 TURNS=1
1980 '
1990 '   SPEED DIRECTS PACE OF GAME
2000 '
2010 PEN ON : FOR I=1 TO SPEED : NEXT I
2020   COLOR 23,4
2030   LOCATE YBASE,XBASE,0 : PRINT CHR$(INDX);
2040   COLOR 0,4
2050   LOCATE YBASE-YSTEP,XBASE-XSTEP,0 : PRINT CHR$(INDX);
2060   COLOR 0,7
2070   LOCATE YBASE2,XBASE2,0 : PRINT " ";
2080 FOR I=11 TO 14 : KEY(I) ON : NEXT I
2090 PEN ON : IF PEN(3)=0 THEN PEN OFF : GOTO 1800  ELSE X=PEN(9) : Y=PEN(8) : PEN OFF
2100 IF Y<23 THEN 1800 ELSE ON Y-22 GOSUB 2120, 2140, 2200 : GOTO 1800
2110 '
2120 IF XSTEP=0 THEN RETURN ELSE SPEED=SPD + SPD : XSTEP=0 : YSTEP=-1 : INDX=24 : GOTO 2210
2130 '
2140 IF YSTEP=0 THEN RETURN ELSE SPEED=SPD : YSTEP=0 : IF X>WDTH/2 THEN 2180 ELSE 2160
2150 IF YSTEP=0 THEN RETURN ELSE SPEED=SPD : YSTEP=0
2160 XSTEP=-1 : INDX=27 : GOTO 2210
2170 IF YSTEP=0 THEN RETURN ELSE SPEED=SPD : YSTEP=0
2180 XSTEP=1 : INDX=26 : GOTO 2210
2190 '
2200 IF XSTEP=0 THEN RETURN ELSE SPEED=SPD + SPD : XSTEP=0 : YSTEP=1 : INDX=25
2210 IF (XL=XSTEP) AND (YL=YSTEP) THEN RETURN ELSE SOUND SND,0 : SND = SND + 25 : SOUND SND,200 : XL=XSTEP : YL=YSTEP : RETURN
2220 '
2230 SOUND SND,0 : FOR I =500 TO 340 STEP -1 : SOUND I,.1 : NEXT I : CSCORE=CSCORE + 1 : GOTO 2250
2240 SOUND SND,0 : FOR I =1160 TO 1000 STEP -1 : SOUND I,.1 : NEXT I : PSCORE=PSCORE + 1
2250 COLOR 7,0
2260 GOTO 620
2270 '
2280 '
2290 '   DISPLAY SPEED PADS
2300 LOCATE 23,WDTH-6 : PRINT"SPEED"
2310 IF SPD=SPD1 THEN COLOR 23,0 ELSE COLOR 7,0
2320 LOCATE 24,WDTH-7 : PRINT "S";
2330 IF SPD=SPD2 THEN COLOR 23,0 ELSE COLOR 7,0
2340 LOCATE 24,WDTH-4 : PRINT "M";
2350 IF SPD=SPD3 THEN COLOR 23,0 ELSE COLOR 7,0
2360 LOCATE 24,WDTH-1 : PRINT "F";
2370 COLOR 7,0
2380 LOCATE 25,WDTH-1 : PRINT CHR$(219);
2390 LOCATE 25,WDTH-4 : PRINT CHR$(219);
2400 LOCATE 25,WDTH-7 : PRINT CHR$(219);
2410 SPEED=SPD
2420 RETURN
2430 RUN MENU$
